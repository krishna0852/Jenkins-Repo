pipeline {
    agent any
    tools {
        jdk 'JAVA_HOME'
        maven 'maven_home'
    }
    environment{
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages{
        stage("clone"){
            steps{
                 git branch: 'main', url: 'https://github.com/krishna0852/spring-framework-petclinic.git'
            }
        }
        stage("compile"){
            steps{
                sh 'mvn clean compile'
            }
        }
        stage("Test-cases"){
            steps{
                sh 'mvn test'
            }
        }
        stage("sonarqube analysics"){
            steps{
                withSonarQubeEnv('sonar-scanner') {
                  sh ''' $SCANNER_HOME/bin/sonar-scanner\
                         -Dsonar.projectName=petclinic\
                         -Dsonar.java.binaries=. \
                         -Dsonar.projectKey=petclinic 
                  '''                      
              }
            }
        }
        stage("OWASP-Dependency-check"){
            steps{
                dependencyCheck additionalArguments: '--scan ./ --format HTML',
                odcInstallation: 'owasp-check' //we need to mention the owsap installation path that we configured
                dependencyCheckPublisher pattern: '**/dependency-check-report.html'
            }
        }
        stage("Build"){
            steps{
                sh 'mvn clean install'
            }
        }
         stage("Docker-build & Docker-push"){
        steps{
              
              script{
              
                  withDockerRegistry(credentialsId: 'Docker', toolName: 'docker') {
                         
                    sh "docker build -t devopshandson3/petapp:${BUILD_NUMBER} ."
                    sh "docker push devopshandson3/petapp:${BUILD_NUMBER}"
                 }
              }
             
        }
    } 
    }
}